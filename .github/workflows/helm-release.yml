name: release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  helm-release:
    name: helm release
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        chart: [common]

    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Helm Release
        id: release
        uses: google-github-actions/release-please-action@v3 # not compatible with v4 - needs rewrite and use of release-please-config.json file to split the charts
        with:
          monorepo-tags: true
          package-name: ${{ matrix.chart }}
          path: charts/${{ matrix.chart }}
          release-type: helm
          draft-pull-request: true

      - if: ${{ steps.release.outputs.releases_created }}
        name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@0ad2bb377311d61ac04ad9eb6f252fb68e207260 # v1.7.0
        with:
          index_dir: "."
          linting: "off"
          target_dir: "archive"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add helm-docs common changes to release branch
        env:
          VERSION: "${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
        run: |
          printf "Updating Helm chart documentation for version %s\n" $VERSION

          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          # get the latest changes
          git pull
          # luckily the release branch is always the same
          git switch release-please--branches--main--components--common

          # Update the version in examples directory
          all_charts=$(find ./examples -name Chart.yaml)
          for chart in $all_charts; do
            yq -e -i '(.dependencies[] | select(.name == "common") | .version) = "${VERSION}"' "${chart}"
          done

          # Install and run helm-docs
          go install github.com/norwoodj/helm-docs/cmd/helm-docs@37d3055fece566105cf8cff7c17b7b2355a01677 # 1.14.2
          export PATH=${PATH}:`go env GOPATH`/bin
          helm-docs

          if [ -n "$(git status --porcelain '*.md')" ]; then
            git add \*README.md
            git add \*Chart.yaml
            git commit -m "docs: update Helm chart documentation"
            git push
          else
            echo "Helm versions are up to date"
            exit 0
          fi
      - if: ${{ steps.release.outputs.releases_created }} && failure()
        name: Create issue if failure
        run: |
          gh issue create --title "helm-docs update failed" \
          --body "Helm-docs update failed, please check the [logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
