suite: test external-secrets
values:
  - ./values/common-test-values.yaml
  - ./values/secret-values.yaml  # This value file sets the "RUDDER" secrets.
templates:
  - secrets.yaml
tests:
  - it: must have labels
    set:
      env: dev
      labels:
        custom: label
    asserts:
      - isNotEmpty:
          path: metadata.labels
      - equal:
          path: metadata.labels.environment
          value: dev
      - equal:
          path: metadata.labels.custom
          value: label
  - it: Make sure both secret mappings are created
    asserts:
      - hasDocuments:
          count: 2
  - it: The secretStoreRef must be of kind SecretStore
    asserts:
      - equal:
          path: spec.secretStoreRef.kind
          value: SecretStore
  - it: Target name must match the configmap names
    asserts:
      - equal:
          path: spec.target.name
          value: rudder-test-one-secret
        documentIndex: 0
      - equal:
          path: spec.target.name
          value: rudder-test-two-secrets
        documentIndex: 1
  - it: SecretKey and remoteRef.key - names should match secret name
    asserts:
      - equal:
          path: spec.data[0].secretKey
          value: RUDDER_SECRET
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.key
          value: RUDDER_SECRET
        documentIndex: 0
      - equal:
          path: spec.data[0].secretKey
          value: RUDDER_CAPTAINS_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[1].secretKey
          value: RUDDER_OFFICERS_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[0].remoteRef.key
          value: RUDDER_CAPTAINS_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.key
          value: RUDDER_OFFICERS_SECRET
        documentIndex: 1
  - it: Must use decodingStrategy None and default conversion strategy
    asserts:
      - equal:
          path: spec.data[0].remoteRef.decodingStrategy
          value: None
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.decodingStrategy
          value: None
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.decodingStrategy
          value: None
        documentIndex: 1
      - equal:
          path: spec.data[0].remoteRef.conversionStrategy
          value: Default
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.conversionStrategy
          value: Default
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.conversionStrategy
          value: Default
        documentIndex: 1
  - it: By default the refreshInterval should be set to 1 hour
    asserts:
      - equal:
          path: spec.refreshInterval
          value: 1h
        documentIndex: 0
      - equal:
          path: spec.refreshInterval
          value: 1h
        documentIndex: 1
  - it: Creation policy should be Owner
    asserts:
      - equal:
          path: spec.target.creationPolicy
          value: Owner
        documentIndex: 0
      - equal:
          path: spec.target.creationPolicy
          value: Owner
        documentIndex: 1
  - it: Always use latest secret version
    asserts:
      - equal:
          path: spec.data[0].remoteRef.version
          value: latest
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.version
          value: latest
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.version
          value: latest
        documentIndex: 1
  - it: Should fail to render secret if secret name contains dash
    set:
      secrets:
        app-secrets:
        - RUDDER-CRASH-SECRET
    asserts:
      - failedTemplate:
          errorMessage: SecretNames cannot contain dashes
