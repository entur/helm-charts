probes: &probes
      probes:
        liveness:
          path: "/actuator/health/liveness"
        readiness:
          path: "/actuator/health/readiness"
        startup:
          failureThreshold: 300
          periodSeconds: 1

values: &values
  env: dev
  app: testsuite
  shortname: tstsut
  team: common
  ingress:
    host: test.dev.entur.io
    trafficType: public
  labels:
    custom: label
  deployment:
    labels:
      version: 1
  containers:
    - name: test
      image: img
      env:
        - FOO: bar
      <<: *probes


suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: must have labels
    set:
      <<: *values
    asserts:
      - isNotEmpty:
          template: deployment.yaml
          path: metadata.labels
      - isNotEmpty:
          template: deployment.yaml
          path: metadata.labels.environment
      - isNotEmpty:
          template: deployment.yaml
          path: metadata.labels.custom
      - isNotEmpty:
          template: deployment.yaml
          path: spec.template.metadata.labels.common
  - it: must add to env if listed
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].FOO
          value: bar
  - it: cpu limit can be overridden
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          cpu: 0.1
          cpuLimit: 1
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 1
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 0.1
  - it: cpu limit is 5x request for 0.1
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          cpu: 0.1
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 500m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 0.1
  - it: cpu limit is 5x request for 0.75
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          cpu: 0.75
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 3750m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 0.75
  - it: cpu limit is 5x request for 1
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          cpu: 1.0
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 5000m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 1
  - it: cpu limit is 5x request for > 1
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          cpu: 2.1
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 10500m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 2.1
  - it: memory limit is 120 percent of request
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          memory: 256
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 307Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 256Mi
  - it: memory limit can be overridden
    release:
    set:
      <<: *values
      containers:
        - name: test
          image: img
          memory: 256
          memoryLimit: 1024
          <<: *probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 1024Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 256Mi
  - it: must enable prometheus if enabled
    set:
      <<: *values
      deployment:
        prometheus:
          enabled: true
          path: /actuator/prometheus
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            prometheus.io/scrape: "true"
            prometheus.io/path: "/actuator/prometheus"
            prometheus.io/port: "8080"
  - it: must use 3 replicas if replicas is 3
    set:
      <<: *values
      env: dev
      deployment:
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
  - it: must use 1 replica if forceReplicas is 1 and recreate
    set:
      <<: *values
      env: prd
      deployment:
        forceReplicas: 1
    asserts:
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.strategy.type
          value: Recreate
  - it: must use 3 replica if forceReplicas is 3
    set:
      <<: *values
      env: prd
      deployment:
        forceReplicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
  - it: must adopt for gRPC
    set:
      <<: *values
      containers:
        - name: test
          image: img
          grpc: true
          probes:
            liveness:
              path: "/actuator/health/liveness"
            readiness:
              path: "/actuator/health/readiness"
            startup:
              failureThreshold: 300
              periodSeconds: 1
    asserts:
      - isNotEmpty:
          template: deployment.yaml
          path: spec.template.spec.containers[0].livenessProbe.exec.command
  - it: terminationGracePeriodSeconds use correct value
    set:
      <<: *values
      deployment:
        terminationGracePeriodSeconds: 60
    asserts:
      - equal:
          path: spec.template.spec.terminationGracePeriodSeconds
          value: 60
  - it: spec does not contain terminationGracePeriodSeconds if missing from values
    set:
      <<: *values
    asserts:
      - isEmpty:
          path: spec.template.spec.terminationGracePeriodSeconds
  - it: override credentialsSecret
    set:
      <<: *values
      postgres:
        enabled: true
        credentialsSecret: my-secret 
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].secretRef.name
          value: my-secret
  - it: override connectionConfig
    set:
      <<: *values
      postgres:
        enabled: true
        connectionConfig: my-config 
    asserts:
      - equal:
          path: spec.template.spec.containers[1].envFrom[0].configMapRef.name
          value: my-config


