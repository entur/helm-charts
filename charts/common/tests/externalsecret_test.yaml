values: &values
  env: dev
  app: testsuite
  shortname: tstsut
  team: common
  releaseName: release
  labels:
    custom: label
  ingress:
    host: test.dev.entur.io
    trafficType: public
  secrets:
    one-secret:
      - SINGLE_SECRET
    two-secrets:
      - FIRST_SECRET
      - SECOND_SECRET

suite: test secrets 
templates:
  - secrets.yaml
tests:
  - it: must have labels
    set:
      <<: *values
    asserts:
      - isNotEmpty:
          template: secrets.yaml
          path: metadata.labels
  - it: has two externalSecrets
    set:
      <<: *values
    asserts:
      - hasDocuments:
          count: 2
  - it: must use existing secretStore
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.secretStoreRef.name
          value: testsuite
      - equal:
          path: spec.secretStoreRef.kind
          value: SecretStore
  - it: must use correct secret name
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.target.name
          value: release-one-secret
        documentIndex: 0
      - equal:
          path: spec.target.name
          value: release-two-secrets
        documentIndex: 1
  - it: must use correct data references
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.data[0].secretKey
          value: SINGLE_SECRET
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.key
          value: SINGLE_SECRET
        documentIndex: 0
      - equal:
          path: spec.data[0].secretKey
          value: FIRST_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[1].secretKey
          value: SECOND_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[0].remoteRef.key
          value: FIRST_SECRET
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.key
          value: SECOND_SECRET
        documentIndex: 1
    
  - it: must use decodingStrategy None and default conversion strategy
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.data[0].remoteRef.decodingStrategy
          value: None
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.decodingStrategy
          value: None
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.decodingStrategy
          value: None
        documentIndex: 1
      - equal:
          path: spec.data[0].remoteRef.conversionStrategy
          value: Default
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.conversionStrategy
          value: Default
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.conversionStrategy
          value: Default
        documentIndex: 1
    
  - it: 1h refreshInterval
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.refreshInterval
          value: 1h
        documentIndex: 0
      - equal:
          path: spec.refreshInterval
          value: 1h
        documentIndex: 1
  
  - it: owner creeation policy
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.target.creationPolicy
          value: Owner
        documentIndex: 0
      - equal:
          path: spec.target.creationPolicy
          value: Owner
        documentIndex: 1
  
  - it: use latest secret version
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.data[0].remoteRef.version
          value: latest
        documentIndex: 0
      - equal:
          path: spec.data[0].remoteRef.version
          value: latest
        documentIndex: 1
      - equal:
          path: spec.data[1].remoteRef.version
          value: latest
        documentIndex: 1