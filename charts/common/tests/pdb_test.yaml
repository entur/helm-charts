suite: test pdb
values:
  - ./values/common-test-values.yaml
templates:
  - pdb.yaml
tests:
  - it: must have labels
    set:
      env: dev
      labels:
        custom: label
    asserts:
      - isNotEmpty:
          path: metadata.labels
      - equal:
          path: metadata.labels.environment
          value: dev
      - equal:
          path: metadata.labels.custom
          value: label
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: rudder-test
  - it: must have annotations
    set:
      env: prd
    asserts:
      - equal:
          path: metadata.annotations["meta.helm.sh/release-name"]
          value: rudder-test
      - equal:
          path: metadata.annotations["meta.helm.sh/release-namespace"]
          value: NAMESPACE
  - it: must use default with 2 replicas or more
    set:
      env: prd
      container:
        replicas: 2
    asserts:
      - equal:
          path: spec.minAvailable
          value: "50%"
  - it: must use default with 2 maxreplicas or more in prod
    set:
      env: prd
      maxReplicas: 3
    asserts:
      - equal:
          path: spec.minAvailable
          value: "50%"
  - it: use minAvailable from container if not set on pdb
    set:
      env: prd
      container:
        replicas: 2
        minAvailable: 27%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "27%"
  - it: use minAvailable from deployment if not set on pdb or container
    set:
      env: prd
      deployment:
        replicas: 2
        minAvailable: 26%
      containers:
        - image: app
    asserts:
      - equal:
          path: spec.minAvailable
          value: "26%"
  - it: check for minAvailable on deployment before container
    set:
      env: prd
      deployment:
        replicas: 2
        minAvailable: 30%
      container:
        replicas: 2
        minAvailable: 50%
      containers:
        - image: app
    asserts:
      - equal:
          path: spec.minAvailable
          value: "30%"
  - it: use minAvailable from pdb if not set on pdb or container
    set:
      env: prd
      pdb:
        minAvailable: 25%
      container:
        replicas: 2
      containers:
        - image: app
    asserts:
      - equal:
          path: spec.minAvailable
          value: "25%"
  - it: if container Replicas is set to 1, minAvailable must be 0%
    set:
      env: prd
      container:
        image: some
        replicas: 1
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: if deployment Replicas is set to 1, minAvailable must be 0%
    set:
      env: prd
      deployment:
        replicas: 1
      container:
        image: some
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: if container forceReplicas is set to 1, minAvailable must be 0%
    set:
      env: prd
      container:
        image: some
        forceReplicas: 1
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: if deployment forceReplicas is set to 1, minAvailable must be 0%
    set:
      env: prd
      deployment:
        forceReplicas: 1
      containers:
        - image: some
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: must use pdb if forceReplicas is set to more than 1
    set:
      env: prd
      container:
        image: some
        forceReplicas: 2
        replicas: 2
    asserts:
      - hasDocuments:
          count: 1
  - it: must use pdb if forceReplicas is set to more than 1
    set:
      env: prd
      container:
        image: some
        forceReplicas: 2
        replicas: 2
    asserts:
      - hasDocuments:
          count: 1
  - it: must use pdb if forceReplicas is set to more than 1 on deployment
    set:
      env: prd
      deployment:
        forceReplicas: 2
      containers:
        - image: some
    asserts:
      - hasDocuments:
          count: 1
  - it: must use pdb if forceReplicas is set to 1 on deployment
    set:
      env: prd
      deployment:
        forceReplicas: 1
      containers:
        - image: some
    asserts:
      - hasDocuments:
          count: 1
  - it: must use pdb when replicas not set
    set:
      env: prd
      deployment:
        minAvailable: 4
      container:
        image: some
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.minAvailable
          value: 4
  - it: can override release name
    set:
      env: prd
      releaseName: override
    asserts:
      - equal:
          path: metadata.name
          value: override
  # test env
  - it: must use default with 2 maxReplicas or more
    set:
      env: tst
      container:
        maxReplicas: 5
    asserts:
      - equal:
          path: spec.minAvailable
          value: "50%"
  - it: must use default with 2 maxreplicas or more in tst
    set:
      env: tst
      container:
        maxReplicas: 3
    asserts:
      - equal:
          path: spec.minAvailable
          value: "50%"
  - it: use minAvailable from container if not set on pdb in tst
    set:
      env: tst
      container:
        maxReplicas: 2
        minAvailable: 27%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "27%"
  - it: minAvailable equals zero even if minAvailable is set on container if only one pod in tst
    set:
      env: tst
      container:
        minAvailable: 24%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: minAvailable equals zero even if minAvailable is set on container if only one pod in tst
    set:
      env: tst
      deployment:
        minAvailable: 24%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: minAvailable equals zero even if minAvailable is set on container if only one pod in dev
    set:
      env: dev
      container:
        minAvailable: 24%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "0%"
  - it: use minAvailable from container if not set on pdb in dev
    set:
      env: dev
      container:
        maxReplicas: 2
        minAvailable: 29%
    asserts:
      - equal:
          path: spec.minAvailable
          value: "29%"
