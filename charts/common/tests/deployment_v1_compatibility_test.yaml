suite: test v1 compatibility
values:
  - ./values/deployment-v1-values.yaml
templates:
  - deployment.yaml
tests:
  - it: must have labels
    set:
      env: dev
      labels:
        custom: label
      container:
        image: img
        labels:
          version: 1
    asserts:
      - isNotEmpty:
          path: metadata.labels
      - isNotEmpty:
          path: metadata.labels.environment
      - isNotEmpty:
          path: metadata.labels.custom
      - isNotEmpty:
          path: spec.template.metadata.labels.common
  - it: has common runtime env set from env label
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: dev
  - it: must add to env if listed
    set:
      container:
        image: img
        env:
          - name: FOO
            value: bar
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[1].value
          value: bar
  - it: must mount envFrom if configmap is enabled
    release:
      name: testsuite
    set:
      configmap:
        enabled: true
        data:
          FOO: bar
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].configMapRef.name
          value: testsuite
  - it: cpu limit can be set
    set:
      container:
        image: img
        cpu: "0.1"
        cpuLimit: 1
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "1"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "0.1"
  - it: cpu limit can be skipped
    set:
      container:
        image: img
        cpu: 0.1
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].resources.limits.cpu
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "0.1"
  - it: memory limit is 120 percent of request
    set:
      container:
        image: img
        memory: 256
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 307Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 256Mi
  - it: memory limit can be overridden
    set:
      container:
        image: img
        memory: 256
        memoryLimit: 1024
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 1024Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 256Mi
  - it: must enable prometheus if enabled
    set:
      container:
        image: img
        prometheus:
          enabled: true
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            prometheus.io/scrape: "true"
            prometheus.io/path: "/actuator/prometheus"
            prometheus.io/port: "8080"
  - it: must mount envFrom if postgres enabled
    set:
      postgres:
        enabled: true
    asserts:
      - equal:
          path: spec.template.spec.containers[0].envFrom[0].secretRef.name
          value: testsuite-psql-credentials
  - it: must enable sidecar if postgres enabled
    set:
      postgres:
        enabled: true
    asserts:
      - isNotEmpty:
          path: spec.template.spec.containers[1]
      - equal:
          path: spec.template.spec.containers[1].envFrom[0].configMapRef.name
          value: testsuite-psql-connection
  - it: postgres cpu limit can be overridden
    set:
      postgres:
        enabled: true
        cpu: "0.1"
        cpuLimit: "1"
    asserts:
      - equal:
          path: spec.template.spec.containers[1].resources.limits.cpu
          value: "1"
      - equal:
          path: spec.template.spec.containers[1].resources.requests.cpu
          value: "0.1"
  - it: postgres cpu limit can be cleared
    set:
      postgres:
        enabled: true
        cpu: 0.1
    asserts:
      - isNull:
          path: spec.template.spec.containers[1].resources.limits.cpu
  - it: must use 3 replicas if replicas is 3
    set:
      env: dev
      container:
        image: testimg
        replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
  - it: must use 1 replica if forceReplicas is 1 and recreate
    set:
      env: prd
      container:
        image: some
        forceReplicas: 1
    asserts:
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.strategy.type
          value: Recreate
  - it: must use 3 replica if forceReplicas is 3
    set:
      env: prd
      container:
        image: some
        forceReplicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.strategy.type
          value: RollingUpdate
  - it: must adopt for gRPC
    set:
      grpc: true
      container:
        image: img
    asserts:
      - isNotEmpty:
          path: spec.template.spec.containers[0].livenessProbe.exec.command
  - it: terminationGracePeriodSeconds use correct value
    set:
      container:
        image: img
        terminationGracePeriodSeconds: 60
    asserts:
      - equal:
          path: spec.template.spec.terminationGracePeriodSeconds
          value: 60
  - it: spec does not contain terminationGracePeriodSeconds if missing from values
    set:
      container:
        image: img
    asserts:
      - isNull:
          path: spec.template.spec.terminationGracePeriodSeconds
