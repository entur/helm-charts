values: &values
  env: dev
  app: testsuite
  shortname: tstsut
  team: common
  ingress:
    host: test.dev.entur.io
    trafficType: public
  container:
    image: img
    maxReplicas: 5

suite: test ingress
templates:
  - ingress.yaml
tests:
  - it: must have labels
    set:
      <<: *values
    asserts:
      - isNotEmpty:
          template: ingress.yaml
          path: metadata.labels
  - it: sane defaults and forwards
    release:
      name: testsuite
    set:
      <<: *values
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 80
      - equal:
          path: spec.rules[0].host
          value: test.dev.entur.io
      - equal:
          path: metadata.annotations
          value:
            kubernetes.io/ingress.class: traefik
      - equal:
          path: metadata.labels.traffic-type
          value: public
  - it: can be disabled
    set:
      <<: *values
      ingress:
        enabled: false
    asserts:
      - hasDocuments:
          count: 0
  - it: can be custom
    set:
      <<: *values
      ingress:
        enabled: true
        trafficType: public
        rules:
          - host: good.io
            http:
              paths:
                - backend:
                    service:
                      name: something
                      port:
                        number: 777
                  pathType: ImplementationSpecific
          - host: bad.io
            http:
              paths:
                - backend:
                    service:
                      name: something
                      port:
                        number: 666
                  pathType: ImplementationSpecific
    asserts:
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 777
      - equal:
          path: spec.rules[0].host
          value: good.io
      - equal:
          path: spec.rules[1].http.paths[0].backend.service.port.number
          value: 666
      - equal:
          path: spec.rules[1].host
          value: bad.io
  - it: can be multiple custom
    set:
      env: dev
      app: testsuite
      shortname: tstsut
      team: common
      service:
        externalPort: 8080
        internalPort: 8080
      container:
        image: img
      ingresses:
        - trafficType: public
          rules:
            - host: good.io
              http:
                paths:
                  - backend:
                      service:
                        name: something
                        port:
                          number: 777
                    pathType: ImplementationSpecific
        - trafficType: api
          rules:
            - host: bad.io
              http:
                paths:
                  - backend:
                      service:
                        name: something
                        port:
                          number: 666
                    pathType: ImplementationSpecific
    asserts:
      - hasDocuments:
          count: 2
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 777
        documentIndex: 0
      - equal:
          path: spec.rules[0].host
          value: good.io
        documentIndex: 0
      - equal:
          path: spec.rules[0].http.paths[0].backend.service.port.number
          value: 666
        documentIndex: 1
      - equal:
          path: spec.rules[0].host
          value: bad.io
        documentIndex: 1
